package gdjson

import (
	"reflect"

	"graphics.gd/classdb/Discord"
)

func init() {
	Structables["CSV.set_rows.rows"] = reflect.TypeFor[map[string]string]()
	Structables["CSV.get_rows."] = reflect.TypeFor[map[string]string]()
	Structables["DiscordEmbeddedAppClient.set_activity.activity"] = reflect.TypeFor[Discord.Activity]()
	Structables["DiscordEmbeddedAppResult.get_data."] = reflect.TypeFor[map[string]any]()
	Structables["ENV.config."] = reflect.TypeFor[map[string]string]()
	Structables["ENV.parse."] = reflect.TypeFor[map[string]string]()
	Structables["ENV.populate.env"] = reflect.TypeFor[map[string]string]()
	Structables["ENV.populate."] = reflect.TypeFor[map[string]string]()
	Structables["ENV.refresh."] = reflect.TypeFor[map[string]string]()
	Structables["GraphEdit.get_connection_list_from_node."] = reflect.TypeFor[Connection]()
	Structables["JWT.get_header."] = reflect.TypeFor[map[string]any]()
	Structables["JWT.get_payload."] = reflect.TypeFor[map[string]any]()
	Structables["LobbyClient.get_host_data."] = reflect.TypeFor[map[string]any]()
	Structables["LobbyClient.get_peer_data."] = reflect.TypeFor[map[string]any]()
	Structables["LobbyClient.quick_join.tags"] = reflect.TypeFor[map[string]string]()
	Structables["LobbyClient.create_lobby.tags"] = reflect.TypeFor[map[string]string]()
	Structables["LobbyClient.add_lobby_tags.tags"] = reflect.TypeFor[map[string]string]()
	Structables["LobbyClient.add_peer_user_data.data"] = reflect.TypeFor[map[string]any]()
	Structables["LobbyClient.add_lobby_data.data"] = reflect.TypeFor[map[string]any]()
	Structables["LobbyClient.add_peer_data.data"] = reflect.TypeFor[map[string]any]()
	Structables["LobbyClient.add_peers_data.data"] = reflect.TypeFor[map[string]any]()
	Structables["LobbyClient.get_tags."] = reflect.TypeFor[map[string]string]()
	Structables["LobbyClient.get_data."] = reflect.TypeFor[map[string]any]()
	Structables["LobbyClient.get_user_data."] = reflect.TypeFor[map[string]any]()
	Structables["LobbyClient.get_data."] = reflect.TypeFor[map[string]any]()
	Structables["POGRClient.data.tags"] = reflect.TypeFor[map[string]string]()
	Structables["POGRClient.data.data"] = reflect.TypeFor[map[string]any]()
	Structables["POGRClient.event.tags"] = reflect.TypeFor[map[string]string]()
	Structables["POGRClient.event.data"] = reflect.TypeFor[map[string]any]()
	Structables["POGRClient.logs.tags"] = reflect.TypeFor[map[string]string]()
	Structables["POGRClient.logs.data"] = reflect.TypeFor[map[string]any]()
	Structables["LobbyInfo.get_tags."] = reflect.TypeFor[map[string]string]()
	Structables["LobbyInfo.get_data."] = reflect.TypeFor[map[string]any]()
	Structables["LobbyPeer.get_user_data."] = reflect.TypeFor[map[string]any]()
	Structables["LobbyPeer.get_data."] = reflect.TypeFor[map[string]any]()
	Structables["POGRClient.metrics.metrics"] = reflect.TypeFor[map[string]any]()
	Structables["POGRClient.metrics.tags"] = reflect.TypeFor[map[string]string]()
	Structables["POGRClient.monitor.settings"] = reflect.TypeFor[map[string]any]()
	Structables["SQLiteDatabase.insert_row.value"] = reflect.TypeFor[map[string]any]()
	Structables["SQLiteDatabase.insert_rows.values"] = reflect.TypeFor[map[string]any]()
	Structables["SQLiteDatabase.get_tables."] = reflect.TypeFor[map[string]any]()
	Structables["SQLiteQueryResult.get_result."] = reflect.TypeFor[map[string]any]()
	Structables["ScriptedLobbyClient.get_peer_data."] = reflect.TypeFor[map[string]any]()
	Structables["ScriptedLobbyClient.quick_join.tags"] = reflect.TypeFor[map[string]string]()
	Structables["ScriptedLobbyClient.create_lobby.tags"] = reflect.TypeFor[map[string]string]()
	Structables["ScriptedLobbyClient.add_lobby_tags.tags"] = reflect.TypeFor[map[string]string]()
	Structables["ScriptedLobbyClient.add_peer_user_data.data"] = reflect.TypeFor[map[string]any]()
}
