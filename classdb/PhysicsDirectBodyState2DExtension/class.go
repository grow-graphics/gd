// Code generated by the generate package DO NOT EDIT

// Package PhysicsDirectBodyState2DExtension provides methods for working with PhysicsDirectBodyState2DExtension object instances.
package PhysicsDirectBodyState2DExtension

import "unsafe"
import "reflect"
import "slices"
import "graphics.gd/internal/pointers"
import "graphics.gd/internal/callframe"
import "graphics.gd/internal/gdextension"
import gd "graphics.gd/internal"
import "graphics.gd/internal/gdclass"
import "graphics.gd/variant"
import "graphics.gd/variant/Angle"
import "graphics.gd/variant/Euler"
import "graphics.gd/variant/Signal"
import "graphics.gd/classdb/PhysicsDirectBodyState2D"
import "graphics.gd/classdb/PhysicsDirectSpaceState2D"
import "graphics.gd/variant/Array"
import "graphics.gd/variant/Callable"
import "graphics.gd/variant/Dictionary"
import "graphics.gd/variant/Error"
import "graphics.gd/variant/Float"
import "graphics.gd/variant/Object"
import "graphics.gd/variant/Packed"
import "graphics.gd/variant/Path"
import "graphics.gd/variant/RID"
import "graphics.gd/variant/RefCounted"
import "graphics.gd/variant/String"
import "graphics.gd/variant/Transform2D"
import "graphics.gd/variant/Vector2"

var _ Object.ID

type _ gdclass.Node

var _ gd.Object
var _ RefCounted.Instance
var _ unsafe.Pointer
var _ reflect.Type
var _ callframe.Frame
var _ = pointers.Cycle
var _ = Array.Nil
var _ variant.Any
var _ Callable.Function
var _ Dictionary.Any
var _ RID.Any
var _ String.Readable
var _ Path.ToNode
var _ Packed.Bytes
var _ Error.Code
var _ Float.X
var _ Signal.Any
var _ Angle.Radians
var _ Euler.Radians
var _ gdextension.Object
var _ = slices.Delete[[]struct{}, struct{}]

/*
ID is a typed object ID (reference) to an instance of this class, use it to store references to objects with
unknown lifetimes, as an ID will not panic on use if the underlying object has been destroyed.
*/
type ID Object.ID

func (id ID) Instance() (Instance, bool) { return Object.As[Instance](Object.ID(id).Instance()) }

/*
Extension can be embedded in a new struct to create an extension of this class.
T should be the type that is embedding this [Extension]
*/
type Extension[T gdclass.Interface] struct{ gdclass.Extension[T, Instance] }

/*
This class extends [PhysicsDirectBodyState2D] by providing additional virtual methods that can be overridden. When these methods are overridden, they will be called instead of the internal methods of the physics server.
Intended for use with GDExtension to create custom implementations of [PhysicsDirectBodyState2D].

	See [Interface] for methods that can be overridden by a [Class] that extends it.
*/
type Instance [1]gdclass.PhysicsDirectBodyState2DExtension

var otype gdextension.ObjectType
var sname gdextension.StringName
var methods struct {
}

func init() {
	gd.Links = append(gd.Links, func() {
		sname = gdextension.Host.Strings.Intern.UTF8("PhysicsDirectBodyState2DExtension")
		otype = gdextension.Host.Objects.Type(sname)
		gd.LinkMethods(sname, &methods, false)
	})
	gd.RegisterCleanup(func() {
		gdextension.Free(gdextension.TypeStringName, &sname)
	})
}
func (self Instance) ID() ID { return ID(Object.Instance(self.AsObject()).ID()) }

// Nil is a nil/null instance of the class. Equivalent to the zero value.
var Nil Instance

type Any interface {
	gd.IsClass
	AsPhysicsDirectBodyState2DExtension() Instance
}
type Interface interface {
	//Implement to override the behavior of [member PhysicsDirectBodyState2D.total_gravity] and its respective getter.
	GetTotalGravity() Vector2.XY
	//Implement to override the behavior of [member PhysicsDirectBodyState2D.total_linear_damp] and its respective getter.
	GetTotalLinearDamp() Float.X
	//Implement to override the behavior of [member PhysicsDirectBodyState2D.total_angular_damp] and its respective getter.
	GetTotalAngularDamp() Float.X
	//Implement to override the behavior of [member PhysicsDirectBodyState2D.center_of_mass] and its respective getter.
	GetCenterOfMass() Vector2.XY
	//Implement to override the behavior of [member PhysicsDirectBodyState2D.center_of_mass_local] and its respective getter.
	GetCenterOfMassLocal() Vector2.XY
	//Implement to override the behavior of [member PhysicsDirectBodyState2D.inverse_mass] and its respective getter.
	GetInverseMass() Float.X
	//Implement to override the behavior of [member PhysicsDirectBodyState2D.inverse_inertia] and its respective getter.
	GetInverseInertia() Float.X
	//Implement to override the behavior of [member PhysicsDirectBodyState2D.linear_velocity] and its respective setter.
	SetLinearVelocity(velocity Vector2.XY)
	//Implement to override the behavior of [member PhysicsDirectBodyState2D.linear_velocity] and its respective getter.
	GetLinearVelocity() Vector2.XY
	//Implement to override the behavior of [member PhysicsDirectBodyState2D.angular_velocity] and its respective setter.
	SetAngularVelocity(velocity Float.X)
	//Implement to override the behavior of [member PhysicsDirectBodyState2D.angular_velocity] and its respective getter.
	GetAngularVelocity() Float.X
	//Implement to override the behavior of [member PhysicsDirectBodyState2D.transform] and its respective setter.
	SetTransform(transform Transform2D.OriginXY)
	//Implement to override the behavior of [member PhysicsDirectBodyState2D.transform] and its respective getter.
	GetTransform() Transform2D.OriginXY
	//Overridable version of [method PhysicsDirectBodyState2D.get_velocity_at_local_position].
	GetVelocityAtLocalPosition(local_position Vector2.XY) Vector2.XY
	//Overridable version of [method PhysicsDirectBodyState2D.apply_central_impulse].
	ApplyCentralImpulse(impulse Vector2.XY)
	//Overridable version of [method PhysicsDirectBodyState2D.apply_impulse].
	ApplyImpulse(impulse Vector2.XY, position Vector2.XY)
	//Overridable version of [method PhysicsDirectBodyState2D.apply_torque_impulse].
	ApplyTorqueImpulse(impulse Float.X)
	//Overridable version of [method PhysicsDirectBodyState2D.apply_central_force].
	ApplyCentralForce(force Vector2.XY)
	//Overridable version of [method PhysicsDirectBodyState2D.apply_force].
	ApplyForce(force Vector2.XY, position Vector2.XY)
	//Overridable version of [method PhysicsDirectBodyState2D.apply_torque].
	ApplyTorque(torque Float.X)
	//Overridable version of [method PhysicsDirectBodyState2D.add_constant_central_force].
	AddConstantCentralForce(force Vector2.XY)
	//Overridable version of [method PhysicsDirectBodyState2D.add_constant_force].
	AddConstantForce(force Vector2.XY, position Vector2.XY)
	//Overridable version of [method PhysicsDirectBodyState2D.add_constant_torque].
	AddConstantTorque(torque Float.X)
	//Overridable version of [method PhysicsDirectBodyState2D.set_constant_force].
	SetConstantForce(force Vector2.XY)
	//Overridable version of [method PhysicsDirectBodyState2D.get_constant_force].
	GetConstantForce() Vector2.XY
	//Overridable version of [method PhysicsDirectBodyState2D.set_constant_torque].
	SetConstantTorque(torque Float.X)
	//Overridable version of [method PhysicsDirectBodyState2D.get_constant_torque].
	GetConstantTorque() Float.X
	//Implement to override the behavior of [member PhysicsDirectBodyState2D.sleeping] and its respective setter.
	SetSleepState(enabled bool)
	//Implement to override the behavior of [member PhysicsDirectBodyState2D.sleeping] and its respective getter.
	IsSleeping() bool
	//Overridable version of [method PhysicsDirectBodyState2D.get_contact_count].
	GetContactCount() int
	//Overridable version of [method PhysicsDirectBodyState2D.get_contact_local_position].
	GetContactLocalPosition(contact_idx int) Vector2.XY
	//Overridable version of [method PhysicsDirectBodyState2D.get_contact_local_normal].
	GetContactLocalNormal(contact_idx int) Vector2.XY
	//Overridable version of [method PhysicsDirectBodyState2D.get_contact_local_shape].
	GetContactLocalShape(contact_idx int) int
	//Overridable version of [method PhysicsDirectBodyState2D.get_contact_local_velocity_at_position].
	GetContactLocalVelocityAtPosition(contact_idx int) Vector2.XY
	//Overridable version of [method PhysicsDirectBodyState2D.get_contact_collider].
	GetContactCollider(contact_idx int) RID.Any
	//Overridable version of [method PhysicsDirectBodyState2D.get_contact_collider_position].
	GetContactColliderPosition(contact_idx int) Vector2.XY
	//Overridable version of [method PhysicsDirectBodyState2D.get_contact_collider_id].
	GetContactColliderId(contact_idx int) int
	//Overridable version of [method PhysicsDirectBodyState2D.get_contact_collider_object].
	GetContactColliderObject(contact_idx int) Object.Instance
	//Overridable version of [method PhysicsDirectBodyState2D.get_contact_collider_shape].
	GetContactColliderShape(contact_idx int) int
	//Overridable version of [method PhysicsDirectBodyState2D.get_contact_collider_velocity_at_position].
	GetContactColliderVelocityAtPosition(contact_idx int) Vector2.XY
	//Overridable version of [method PhysicsDirectBodyState2D.get_contact_impulse].
	GetContactImpulse(contact_idx int) Vector2.XY
	//Implement to override the behavior of [member PhysicsDirectBodyState2D.step] and its respective getter.
	GetStep() Float.X
	//Overridable version of [method PhysicsDirectBodyState2D.integrate_forces].
	IntegrateForces()
	//Overridable version of [method PhysicsDirectBodyState2D.get_space_state].
	GetSpaceState() PhysicsDirectSpaceState2D.Instance
}

// Implementation implements [Interface] with empty methods.
type Implementation = implementation

type implementation struct{}

func (self implementation) GetTotalGravity() (_ Vector2.XY)             { return }
func (self implementation) GetTotalLinearDamp() (_ Float.X)             { return }
func (self implementation) GetTotalAngularDamp() (_ Float.X)            { return }
func (self implementation) GetCenterOfMass() (_ Vector2.XY)             { return }
func (self implementation) GetCenterOfMassLocal() (_ Vector2.XY)        { return }
func (self implementation) GetInverseMass() (_ Float.X)                 { return }
func (self implementation) GetInverseInertia() (_ Float.X)              { return }
func (self implementation) SetLinearVelocity(velocity Vector2.XY)       { return }
func (self implementation) GetLinearVelocity() (_ Vector2.XY)           { return }
func (self implementation) SetAngularVelocity(velocity Float.X)         { return }
func (self implementation) GetAngularVelocity() (_ Float.X)             { return }
func (self implementation) SetTransform(transform Transform2D.OriginXY) { return }
func (self implementation) GetTransform() (_ Transform2D.OriginXY)      { return }
func (self implementation) GetVelocityAtLocalPosition(local_position Vector2.XY) (_ Vector2.XY) {
	return
}
func (self implementation) ApplyCentralImpulse(impulse Vector2.XY)                           { return }
func (self implementation) ApplyImpulse(impulse Vector2.XY, position Vector2.XY)             { return }
func (self implementation) ApplyTorqueImpulse(impulse Float.X)                               { return }
func (self implementation) ApplyCentralForce(force Vector2.XY)                               { return }
func (self implementation) ApplyForce(force Vector2.XY, position Vector2.XY)                 { return }
func (self implementation) ApplyTorque(torque Float.X)                                       { return }
func (self implementation) AddConstantCentralForce(force Vector2.XY)                         { return }
func (self implementation) AddConstantForce(force Vector2.XY, position Vector2.XY)           { return }
func (self implementation) AddConstantTorque(torque Float.X)                                 { return }
func (self implementation) SetConstantForce(force Vector2.XY)                                { return }
func (self implementation) GetConstantForce() (_ Vector2.XY)                                 { return }
func (self implementation) SetConstantTorque(torque Float.X)                                 { return }
func (self implementation) GetConstantTorque() (_ Float.X)                                   { return }
func (self implementation) SetSleepState(enabled bool)                                       { return }
func (self implementation) IsSleeping() (_ bool)                                             { return }
func (self implementation) GetContactCount() (_ int)                                         { return }
func (self implementation) GetContactLocalPosition(contact_idx int) (_ Vector2.XY)           { return }
func (self implementation) GetContactLocalNormal(contact_idx int) (_ Vector2.XY)             { return }
func (self implementation) GetContactLocalShape(contact_idx int) (_ int)                     { return }
func (self implementation) GetContactLocalVelocityAtPosition(contact_idx int) (_ Vector2.XY) { return }
func (self implementation) GetContactCollider(contact_idx int) (_ RID.Any)                   { return }
func (self implementation) GetContactColliderPosition(contact_idx int) (_ Vector2.XY)        { return }
func (self implementation) GetContactColliderId(contact_idx int) (_ int)                     { return }
func (self implementation) GetContactColliderObject(contact_idx int) (_ Object.Instance)     { return }
func (self implementation) GetContactColliderShape(contact_idx int) (_ int)                  { return }
func (self implementation) GetContactColliderVelocityAtPosition(contact_idx int) (_ Vector2.XY) {
	return
}
func (self implementation) GetContactImpulse(contact_idx int) (_ Vector2.XY)      { return }
func (self implementation) GetStep() (_ Float.X)                                  { return }
func (self implementation) IntegrateForces()                                      { return }
func (self implementation) GetSpaceState() (_ PhysicsDirectSpaceState2D.Instance) { return }

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.total_gravity] and its respective getter.
*/
func (Instance) _get_total_gravity(impl func(ptr unsafe.Pointer) Vector2.XY) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, Vector2.XY(ret))
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.total_linear_damp] and its respective getter.
*/
func (Instance) _get_total_linear_damp(impl func(ptr unsafe.Pointer) Float.X) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, float64(ret))
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.total_angular_damp] and its respective getter.
*/
func (Instance) _get_total_angular_damp(impl func(ptr unsafe.Pointer) Float.X) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, float64(ret))
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.center_of_mass] and its respective getter.
*/
func (Instance) _get_center_of_mass(impl func(ptr unsafe.Pointer) Vector2.XY) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, Vector2.XY(ret))
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.center_of_mass_local] and its respective getter.
*/
func (Instance) _get_center_of_mass_local(impl func(ptr unsafe.Pointer) Vector2.XY) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, Vector2.XY(ret))
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.inverse_mass] and its respective getter.
*/
func (Instance) _get_inverse_mass(impl func(ptr unsafe.Pointer) Float.X) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, float64(ret))
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.inverse_inertia] and its respective getter.
*/
func (Instance) _get_inverse_inertia(impl func(ptr unsafe.Pointer) Float.X) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, float64(ret))
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.linear_velocity] and its respective setter.
*/
func (Instance) _set_linear_velocity(impl func(ptr unsafe.Pointer, velocity Vector2.XY)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var velocity = gd.UnsafeGet[Vector2.XY](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, velocity)
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.linear_velocity] and its respective getter.
*/
func (Instance) _get_linear_velocity(impl func(ptr unsafe.Pointer) Vector2.XY) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, Vector2.XY(ret))
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.angular_velocity] and its respective setter.
*/
func (Instance) _set_angular_velocity(impl func(ptr unsafe.Pointer, velocity Float.X)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var velocity = gd.UnsafeGet[float64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, Float.X(velocity))
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.angular_velocity] and its respective getter.
*/
func (Instance) _get_angular_velocity(impl func(ptr unsafe.Pointer) Float.X) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, float64(ret))
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.transform] and its respective setter.
*/
func (Instance) _set_transform(impl func(ptr unsafe.Pointer, transform Transform2D.OriginXY)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var transform = gd.UnsafeGet[Transform2D.OriginXY](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, transform)
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.transform] and its respective getter.
*/
func (Instance) _get_transform(impl func(ptr unsafe.Pointer) Transform2D.OriginXY) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, Transform2D.OriginXY(ret))
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_velocity_at_local_position].
*/
func (Instance) _get_velocity_at_local_position(impl func(ptr unsafe.Pointer, local_position Vector2.XY) Vector2.XY) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var local_position = gd.UnsafeGet[Vector2.XY](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self, local_position)
		gd.UnsafeSet(p_back, Vector2.XY(ret))
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.apply_central_impulse].
*/
func (Instance) _apply_central_impulse(impl func(ptr unsafe.Pointer, impulse Vector2.XY)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var impulse = gd.UnsafeGet[Vector2.XY](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, impulse)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.apply_impulse].
*/
func (Instance) _apply_impulse(impl func(ptr unsafe.Pointer, impulse Vector2.XY, position Vector2.XY)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var impulse = gd.UnsafeGet[Vector2.XY](p_args, 0)
		var position = gd.UnsafeGet[Vector2.XY](p_args, 1)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, impulse, position)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.apply_torque_impulse].
*/
func (Instance) _apply_torque_impulse(impl func(ptr unsafe.Pointer, impulse Float.X)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var impulse = gd.UnsafeGet[float64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, Float.X(impulse))
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.apply_central_force].
*/
func (Instance) _apply_central_force(impl func(ptr unsafe.Pointer, force Vector2.XY)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var force = gd.UnsafeGet[Vector2.XY](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, force)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.apply_force].
*/
func (Instance) _apply_force(impl func(ptr unsafe.Pointer, force Vector2.XY, position Vector2.XY)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var force = gd.UnsafeGet[Vector2.XY](p_args, 0)
		var position = gd.UnsafeGet[Vector2.XY](p_args, 1)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, force, position)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.apply_torque].
*/
func (Instance) _apply_torque(impl func(ptr unsafe.Pointer, torque Float.X)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var torque = gd.UnsafeGet[float64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, Float.X(torque))
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.add_constant_central_force].
*/
func (Instance) _add_constant_central_force(impl func(ptr unsafe.Pointer, force Vector2.XY)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var force = gd.UnsafeGet[Vector2.XY](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, force)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.add_constant_force].
*/
func (Instance) _add_constant_force(impl func(ptr unsafe.Pointer, force Vector2.XY, position Vector2.XY)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var force = gd.UnsafeGet[Vector2.XY](p_args, 0)
		var position = gd.UnsafeGet[Vector2.XY](p_args, 1)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, force, position)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.add_constant_torque].
*/
func (Instance) _add_constant_torque(impl func(ptr unsafe.Pointer, torque Float.X)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var torque = gd.UnsafeGet[float64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, Float.X(torque))
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.set_constant_force].
*/
func (Instance) _set_constant_force(impl func(ptr unsafe.Pointer, force Vector2.XY)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var force = gd.UnsafeGet[Vector2.XY](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, force)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_constant_force].
*/
func (Instance) _get_constant_force(impl func(ptr unsafe.Pointer) Vector2.XY) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, Vector2.XY(ret))
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.set_constant_torque].
*/
func (Instance) _set_constant_torque(impl func(ptr unsafe.Pointer, torque Float.X)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var torque = gd.UnsafeGet[float64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, Float.X(torque))
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_constant_torque].
*/
func (Instance) _get_constant_torque(impl func(ptr unsafe.Pointer) Float.X) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, float64(ret))
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.sleeping] and its respective setter.
*/
func (Instance) _set_sleep_state(impl func(ptr unsafe.Pointer, enabled bool)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var enabled = gd.UnsafeGet[bool](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, enabled)
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.sleeping] and its respective getter.
*/
func (Instance) _is_sleeping(impl func(ptr unsafe.Pointer) bool) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_contact_count].
*/
func (Instance) _get_contact_count(impl func(ptr unsafe.Pointer) int) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, int64(ret))
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_contact_local_position].
*/
func (Instance) _get_contact_local_position(impl func(ptr unsafe.Pointer, contact_idx int) Vector2.XY) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var contact_idx = gd.UnsafeGet[int64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self, int(contact_idx))
		gd.UnsafeSet(p_back, Vector2.XY(ret))
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_contact_local_normal].
*/
func (Instance) _get_contact_local_normal(impl func(ptr unsafe.Pointer, contact_idx int) Vector2.XY) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var contact_idx = gd.UnsafeGet[int64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self, int(contact_idx))
		gd.UnsafeSet(p_back, Vector2.XY(ret))
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_contact_local_shape].
*/
func (Instance) _get_contact_local_shape(impl func(ptr unsafe.Pointer, contact_idx int) int) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var contact_idx = gd.UnsafeGet[int64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self, int(contact_idx))
		gd.UnsafeSet(p_back, int64(ret))
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_contact_local_velocity_at_position].
*/
func (Instance) _get_contact_local_velocity_at_position(impl func(ptr unsafe.Pointer, contact_idx int) Vector2.XY) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var contact_idx = gd.UnsafeGet[int64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self, int(contact_idx))
		gd.UnsafeSet(p_back, Vector2.XY(ret))
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_contact_collider].
*/
func (Instance) _get_contact_collider(impl func(ptr unsafe.Pointer, contact_idx int) RID.Any) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var contact_idx = gd.UnsafeGet[int64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self, int(contact_idx))
		gd.UnsafeSet(p_back, RID.Any(ret))
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_contact_collider_position].
*/
func (Instance) _get_contact_collider_position(impl func(ptr unsafe.Pointer, contact_idx int) Vector2.XY) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var contact_idx = gd.UnsafeGet[int64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self, int(contact_idx))
		gd.UnsafeSet(p_back, Vector2.XY(ret))
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_contact_collider_id].
*/
func (Instance) _get_contact_collider_id(impl func(ptr unsafe.Pointer, contact_idx int) int) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var contact_idx = gd.UnsafeGet[int64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self, int(contact_idx))
		gd.UnsafeSet(p_back, int64(ret))
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_contact_collider_object].
*/
func (Instance) _get_contact_collider_object(impl func(ptr unsafe.Pointer, contact_idx int) Object.Instance) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var contact_idx = gd.UnsafeGet[int64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self, int(contact_idx))
		ptr, ok := pointers.End(ret[0])

		if !ok {
			return
		}
		gd.UnsafeSet(p_back, ptr)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_contact_collider_shape].
*/
func (Instance) _get_contact_collider_shape(impl func(ptr unsafe.Pointer, contact_idx int) int) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var contact_idx = gd.UnsafeGet[int64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self, int(contact_idx))
		gd.UnsafeSet(p_back, int64(ret))
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_contact_collider_velocity_at_position].
*/
func (Instance) _get_contact_collider_velocity_at_position(impl func(ptr unsafe.Pointer, contact_idx int) Vector2.XY) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var contact_idx = gd.UnsafeGet[int64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self, int(contact_idx))
		gd.UnsafeSet(p_back, Vector2.XY(ret))
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_contact_impulse].
*/
func (Instance) _get_contact_impulse(impl func(ptr unsafe.Pointer, contact_idx int) Vector2.XY) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var contact_idx = gd.UnsafeGet[int64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self, int(contact_idx))
		gd.UnsafeSet(p_back, Vector2.XY(ret))
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.step] and its respective getter.
*/
func (Instance) _get_step(impl func(ptr unsafe.Pointer) Float.X) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, float64(ret))
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.integrate_forces].
*/
func (Instance) _integrate_forces(impl func(ptr unsafe.Pointer)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_space_state].
*/
func (Instance) _get_space_state(impl func(ptr unsafe.Pointer) PhysicsDirectSpaceState2D.Instance) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		ptr, ok := pointers.End(ret[0])

		if !ok {
			return
		}
		gd.UnsafeSet(p_back, ptr)
	}
}

// Advanced exposes a 1:1 low-level instance of the class, undocumented, for those who know what they are doing.
type Advanced = class
type class [1]gdclass.PhysicsDirectBodyState2DExtension

func (self class) AsObject() [1]gd.Object { return self[0].AsObject() }
func (self *class) SetObject(obj [1]gd.Object) bool {
	if gdextension.Host.Objects.Cast(gdextension.Object(pointers.Get(obj[0])[0]), otype) != 0 {
		self[0] = pointers.AsA[gdclass.PhysicsDirectBodyState2DExtension](obj[0])
		return true
	}
	return false
}
func (self *Instance) SetObject(obj [1]gd.Object) bool {
	if gdextension.Host.Objects.Cast(gdextension.Object(pointers.Get(obj[0])[0]), otype) != 0 {
		self[0] = pointers.AsA[gdclass.PhysicsDirectBodyState2DExtension](obj[0])
		return true
	}
	return false
}
func (self Instance) AsObject() [1]gd.Object      { return self[0].AsObject() }
func (self *Extension[T]) AsObject() [1]gd.Object { return self.Super().AsObject() }
func New() Instance {
	if !gd.Linked {
		var placeholder = Instance([1]gdclass.PhysicsDirectBodyState2DExtension{pointers.Add[gdclass.PhysicsDirectBodyState2DExtension]([3]uint64{})})
		gd.StartupFunctions = append(gd.StartupFunctions, func() {
			if gd.Linked {
				raw, _ := pointers.End(New().AsObject()[0])
				pointers.Set(pointers.AsA[gd.Object](placeholder[0]), raw)
				gd.RegisterCleanup(func() {
					if raw := pointers.Get[gd.Object](placeholder.AsObject()[0]); raw[0] != 0 && raw[1] == 0 {
						gdextension.Host.Objects.Unsafe.Free(gdextension.Object(raw[0]))
					}
				})
			}
		})
		return placeholder
	}
	casted := Instance([1]gdclass.PhysicsDirectBodyState2DExtension{pointers.New[gdclass.PhysicsDirectBodyState2DExtension]([3]uint64{uint64(gdextension.Host.Objects.Make(sname))})})
	casted.AsObject()[0].Notification(0, false)
	return casted
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.total_gravity] and its respective getter.
*/
func (class) _get_total_gravity(impl func(ptr unsafe.Pointer) Vector2.XY) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.total_linear_damp] and its respective getter.
*/
func (class) _get_total_linear_damp(impl func(ptr unsafe.Pointer) float64) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.total_angular_damp] and its respective getter.
*/
func (class) _get_total_angular_damp(impl func(ptr unsafe.Pointer) float64) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.center_of_mass] and its respective getter.
*/
func (class) _get_center_of_mass(impl func(ptr unsafe.Pointer) Vector2.XY) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.center_of_mass_local] and its respective getter.
*/
func (class) _get_center_of_mass_local(impl func(ptr unsafe.Pointer) Vector2.XY) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.inverse_mass] and its respective getter.
*/
func (class) _get_inverse_mass(impl func(ptr unsafe.Pointer) float64) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.inverse_inertia] and its respective getter.
*/
func (class) _get_inverse_inertia(impl func(ptr unsafe.Pointer) float64) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.linear_velocity] and its respective setter.
*/
func (class) _set_linear_velocity(impl func(ptr unsafe.Pointer, velocity Vector2.XY)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var velocity = gd.UnsafeGet[Vector2.XY](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, velocity)
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.linear_velocity] and its respective getter.
*/
func (class) _get_linear_velocity(impl func(ptr unsafe.Pointer) Vector2.XY) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.angular_velocity] and its respective setter.
*/
func (class) _set_angular_velocity(impl func(ptr unsafe.Pointer, velocity float64)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var velocity = gd.UnsafeGet[float64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, velocity)
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.angular_velocity] and its respective getter.
*/
func (class) _get_angular_velocity(impl func(ptr unsafe.Pointer) float64) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.transform] and its respective setter.
*/
func (class) _set_transform(impl func(ptr unsafe.Pointer, transform Transform2D.OriginXY)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var transform = gd.UnsafeGet[Transform2D.OriginXY](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, transform)
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.transform] and its respective getter.
*/
func (class) _get_transform(impl func(ptr unsafe.Pointer) Transform2D.OriginXY) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_velocity_at_local_position].
*/
func (class) _get_velocity_at_local_position(impl func(ptr unsafe.Pointer, local_position Vector2.XY) Vector2.XY) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var local_position = gd.UnsafeGet[Vector2.XY](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self, local_position)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.apply_central_impulse].
*/
func (class) _apply_central_impulse(impl func(ptr unsafe.Pointer, impulse Vector2.XY)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var impulse = gd.UnsafeGet[Vector2.XY](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, impulse)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.apply_impulse].
*/
func (class) _apply_impulse(impl func(ptr unsafe.Pointer, impulse Vector2.XY, position Vector2.XY)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var impulse = gd.UnsafeGet[Vector2.XY](p_args, 0)
		var position = gd.UnsafeGet[Vector2.XY](p_args, 1)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, impulse, position)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.apply_torque_impulse].
*/
func (class) _apply_torque_impulse(impl func(ptr unsafe.Pointer, impulse float64)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var impulse = gd.UnsafeGet[float64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, impulse)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.apply_central_force].
*/
func (class) _apply_central_force(impl func(ptr unsafe.Pointer, force Vector2.XY)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var force = gd.UnsafeGet[Vector2.XY](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, force)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.apply_force].
*/
func (class) _apply_force(impl func(ptr unsafe.Pointer, force Vector2.XY, position Vector2.XY)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var force = gd.UnsafeGet[Vector2.XY](p_args, 0)
		var position = gd.UnsafeGet[Vector2.XY](p_args, 1)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, force, position)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.apply_torque].
*/
func (class) _apply_torque(impl func(ptr unsafe.Pointer, torque float64)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var torque = gd.UnsafeGet[float64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, torque)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.add_constant_central_force].
*/
func (class) _add_constant_central_force(impl func(ptr unsafe.Pointer, force Vector2.XY)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var force = gd.UnsafeGet[Vector2.XY](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, force)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.add_constant_force].
*/
func (class) _add_constant_force(impl func(ptr unsafe.Pointer, force Vector2.XY, position Vector2.XY)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var force = gd.UnsafeGet[Vector2.XY](p_args, 0)
		var position = gd.UnsafeGet[Vector2.XY](p_args, 1)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, force, position)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.add_constant_torque].
*/
func (class) _add_constant_torque(impl func(ptr unsafe.Pointer, torque float64)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var torque = gd.UnsafeGet[float64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, torque)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.set_constant_force].
*/
func (class) _set_constant_force(impl func(ptr unsafe.Pointer, force Vector2.XY)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var force = gd.UnsafeGet[Vector2.XY](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, force)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_constant_force].
*/
func (class) _get_constant_force(impl func(ptr unsafe.Pointer) Vector2.XY) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.set_constant_torque].
*/
func (class) _set_constant_torque(impl func(ptr unsafe.Pointer, torque float64)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var torque = gd.UnsafeGet[float64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, torque)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_constant_torque].
*/
func (class) _get_constant_torque(impl func(ptr unsafe.Pointer) float64) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.sleeping] and its respective setter.
*/
func (class) _set_sleep_state(impl func(ptr unsafe.Pointer, enabled bool)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var enabled = gd.UnsafeGet[bool](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self, enabled)
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.sleeping] and its respective getter.
*/
func (class) _is_sleeping(impl func(ptr unsafe.Pointer) bool) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_contact_count].
*/
func (class) _get_contact_count(impl func(ptr unsafe.Pointer) int64) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_contact_local_position].
*/
func (class) _get_contact_local_position(impl func(ptr unsafe.Pointer, contact_idx int64) Vector2.XY) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var contact_idx = gd.UnsafeGet[int64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self, contact_idx)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_contact_local_normal].
*/
func (class) _get_contact_local_normal(impl func(ptr unsafe.Pointer, contact_idx int64) Vector2.XY) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var contact_idx = gd.UnsafeGet[int64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self, contact_idx)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_contact_local_shape].
*/
func (class) _get_contact_local_shape(impl func(ptr unsafe.Pointer, contact_idx int64) int64) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var contact_idx = gd.UnsafeGet[int64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self, contact_idx)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_contact_local_velocity_at_position].
*/
func (class) _get_contact_local_velocity_at_position(impl func(ptr unsafe.Pointer, contact_idx int64) Vector2.XY) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var contact_idx = gd.UnsafeGet[int64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self, contact_idx)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_contact_collider].
*/
func (class) _get_contact_collider(impl func(ptr unsafe.Pointer, contact_idx int64) RID.Any) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var contact_idx = gd.UnsafeGet[int64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self, contact_idx)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_contact_collider_position].
*/
func (class) _get_contact_collider_position(impl func(ptr unsafe.Pointer, contact_idx int64) Vector2.XY) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var contact_idx = gd.UnsafeGet[int64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self, contact_idx)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_contact_collider_id].
*/
func (class) _get_contact_collider_id(impl func(ptr unsafe.Pointer, contact_idx int64) int64) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var contact_idx = gd.UnsafeGet[int64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self, contact_idx)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_contact_collider_object].
*/
func (class) _get_contact_collider_object(impl func(ptr unsafe.Pointer, contact_idx int64) [1]gd.Object) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var contact_idx = gd.UnsafeGet[int64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self, contact_idx)
		ptr, ok := pointers.End(ret[0])

		if !ok {
			return
		}
		gd.UnsafeSet(p_back, ptr)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_contact_collider_shape].
*/
func (class) _get_contact_collider_shape(impl func(ptr unsafe.Pointer, contact_idx int64) int64) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var contact_idx = gd.UnsafeGet[int64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self, contact_idx)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_contact_collider_velocity_at_position].
*/
func (class) _get_contact_collider_velocity_at_position(impl func(ptr unsafe.Pointer, contact_idx int64) Vector2.XY) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var contact_idx = gd.UnsafeGet[int64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self, contact_idx)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_contact_impulse].
*/
func (class) _get_contact_impulse(impl func(ptr unsafe.Pointer, contact_idx int64) Vector2.XY) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		var contact_idx = gd.UnsafeGet[int64](p_args, 0)
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self, contact_idx)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Implement to override the behavior of [member PhysicsDirectBodyState2D.step] and its respective getter.
*/
func (class) _get_step(impl func(ptr unsafe.Pointer) float64) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		gd.UnsafeSet(p_back, ret)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.integrate_forces].
*/
func (class) _integrate_forces(impl func(ptr unsafe.Pointer)) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		impl(self)
	}
}

/*
Overridable version of [method PhysicsDirectBodyState2D.get_space_state].
*/
func (class) _get_space_state(impl func(ptr unsafe.Pointer) [1]gdclass.PhysicsDirectSpaceState2D) (cb gd.ExtensionClassCallVirtualFunc) {
	return func(class any, p_args gd.Address, p_back gd.Address) {
		self := reflect.ValueOf(class).UnsafePointer()
		ret := impl(self)
		ptr, ok := pointers.End(ret[0])

		if !ok {
			return
		}
		gd.UnsafeSet(p_back, ptr)
	}
}

func (self class) AsPhysicsDirectBodyState2DExtension() Advanced {
	return Advanced{pointers.AsA[gdclass.PhysicsDirectBodyState2DExtension](self[0])}
}
func (self Instance) AsPhysicsDirectBodyState2DExtension() Instance {
	return Instance{pointers.AsA[gdclass.PhysicsDirectBodyState2DExtension](self[0])}
}
func (self *Extension[T]) AsPhysicsDirectBodyState2DExtension() Instance {
	return self.Super().AsPhysicsDirectBodyState2DExtension()
}
func (self class) AsPhysicsDirectBodyState2D() PhysicsDirectBodyState2D.Advanced {
	return PhysicsDirectBodyState2D.Advanced{pointers.AsA[gdclass.PhysicsDirectBodyState2D](self[0])}
}
func (self *Extension[T]) AsPhysicsDirectBodyState2D() PhysicsDirectBodyState2D.Instance {
	return self.Super().AsPhysicsDirectBodyState2D()
}
func (self Instance) AsPhysicsDirectBodyState2D() PhysicsDirectBodyState2D.Instance {
	return PhysicsDirectBodyState2D.Instance{pointers.AsA[gdclass.PhysicsDirectBodyState2D](self[0])}
}

func (self class) Virtual(name string) reflect.Value {
	switch name {
	case "_get_total_gravity":
		return reflect.ValueOf(self._get_total_gravity)
	case "_get_total_linear_damp":
		return reflect.ValueOf(self._get_total_linear_damp)
	case "_get_total_angular_damp":
		return reflect.ValueOf(self._get_total_angular_damp)
	case "_get_center_of_mass":
		return reflect.ValueOf(self._get_center_of_mass)
	case "_get_center_of_mass_local":
		return reflect.ValueOf(self._get_center_of_mass_local)
	case "_get_inverse_mass":
		return reflect.ValueOf(self._get_inverse_mass)
	case "_get_inverse_inertia":
		return reflect.ValueOf(self._get_inverse_inertia)
	case "_set_linear_velocity":
		return reflect.ValueOf(self._set_linear_velocity)
	case "_get_linear_velocity":
		return reflect.ValueOf(self._get_linear_velocity)
	case "_set_angular_velocity":
		return reflect.ValueOf(self._set_angular_velocity)
	case "_get_angular_velocity":
		return reflect.ValueOf(self._get_angular_velocity)
	case "_set_transform":
		return reflect.ValueOf(self._set_transform)
	case "_get_transform":
		return reflect.ValueOf(self._get_transform)
	case "_get_velocity_at_local_position":
		return reflect.ValueOf(self._get_velocity_at_local_position)
	case "_apply_central_impulse":
		return reflect.ValueOf(self._apply_central_impulse)
	case "_apply_impulse":
		return reflect.ValueOf(self._apply_impulse)
	case "_apply_torque_impulse":
		return reflect.ValueOf(self._apply_torque_impulse)
	case "_apply_central_force":
		return reflect.ValueOf(self._apply_central_force)
	case "_apply_force":
		return reflect.ValueOf(self._apply_force)
	case "_apply_torque":
		return reflect.ValueOf(self._apply_torque)
	case "_add_constant_central_force":
		return reflect.ValueOf(self._add_constant_central_force)
	case "_add_constant_force":
		return reflect.ValueOf(self._add_constant_force)
	case "_add_constant_torque":
		return reflect.ValueOf(self._add_constant_torque)
	case "_set_constant_force":
		return reflect.ValueOf(self._set_constant_force)
	case "_get_constant_force":
		return reflect.ValueOf(self._get_constant_force)
	case "_set_constant_torque":
		return reflect.ValueOf(self._set_constant_torque)
	case "_get_constant_torque":
		return reflect.ValueOf(self._get_constant_torque)
	case "_set_sleep_state":
		return reflect.ValueOf(self._set_sleep_state)
	case "_is_sleeping":
		return reflect.ValueOf(self._is_sleeping)
	case "_get_contact_count":
		return reflect.ValueOf(self._get_contact_count)
	case "_get_contact_local_position":
		return reflect.ValueOf(self._get_contact_local_position)
	case "_get_contact_local_normal":
		return reflect.ValueOf(self._get_contact_local_normal)
	case "_get_contact_local_shape":
		return reflect.ValueOf(self._get_contact_local_shape)
	case "_get_contact_local_velocity_at_position":
		return reflect.ValueOf(self._get_contact_local_velocity_at_position)
	case "_get_contact_collider":
		return reflect.ValueOf(self._get_contact_collider)
	case "_get_contact_collider_position":
		return reflect.ValueOf(self._get_contact_collider_position)
	case "_get_contact_collider_id":
		return reflect.ValueOf(self._get_contact_collider_id)
	case "_get_contact_collider_object":
		return reflect.ValueOf(self._get_contact_collider_object)
	case "_get_contact_collider_shape":
		return reflect.ValueOf(self._get_contact_collider_shape)
	case "_get_contact_collider_velocity_at_position":
		return reflect.ValueOf(self._get_contact_collider_velocity_at_position)
	case "_get_contact_impulse":
		return reflect.ValueOf(self._get_contact_impulse)
	case "_get_step":
		return reflect.ValueOf(self._get_step)
	case "_integrate_forces":
		return reflect.ValueOf(self._integrate_forces)
	case "_get_space_state":
		return reflect.ValueOf(self._get_space_state)
	default:
		return gd.VirtualByName(PhysicsDirectBodyState2D.Advanced(self.AsPhysicsDirectBodyState2D()), name)
	}
}

func (self Instance) Virtual(name string) reflect.Value {
	switch name {
	case "_get_total_gravity":
		return reflect.ValueOf(self._get_total_gravity)
	case "_get_total_linear_damp":
		return reflect.ValueOf(self._get_total_linear_damp)
	case "_get_total_angular_damp":
		return reflect.ValueOf(self._get_total_angular_damp)
	case "_get_center_of_mass":
		return reflect.ValueOf(self._get_center_of_mass)
	case "_get_center_of_mass_local":
		return reflect.ValueOf(self._get_center_of_mass_local)
	case "_get_inverse_mass":
		return reflect.ValueOf(self._get_inverse_mass)
	case "_get_inverse_inertia":
		return reflect.ValueOf(self._get_inverse_inertia)
	case "_set_linear_velocity":
		return reflect.ValueOf(self._set_linear_velocity)
	case "_get_linear_velocity":
		return reflect.ValueOf(self._get_linear_velocity)
	case "_set_angular_velocity":
		return reflect.ValueOf(self._set_angular_velocity)
	case "_get_angular_velocity":
		return reflect.ValueOf(self._get_angular_velocity)
	case "_set_transform":
		return reflect.ValueOf(self._set_transform)
	case "_get_transform":
		return reflect.ValueOf(self._get_transform)
	case "_get_velocity_at_local_position":
		return reflect.ValueOf(self._get_velocity_at_local_position)
	case "_apply_central_impulse":
		return reflect.ValueOf(self._apply_central_impulse)
	case "_apply_impulse":
		return reflect.ValueOf(self._apply_impulse)
	case "_apply_torque_impulse":
		return reflect.ValueOf(self._apply_torque_impulse)
	case "_apply_central_force":
		return reflect.ValueOf(self._apply_central_force)
	case "_apply_force":
		return reflect.ValueOf(self._apply_force)
	case "_apply_torque":
		return reflect.ValueOf(self._apply_torque)
	case "_add_constant_central_force":
		return reflect.ValueOf(self._add_constant_central_force)
	case "_add_constant_force":
		return reflect.ValueOf(self._add_constant_force)
	case "_add_constant_torque":
		return reflect.ValueOf(self._add_constant_torque)
	case "_set_constant_force":
		return reflect.ValueOf(self._set_constant_force)
	case "_get_constant_force":
		return reflect.ValueOf(self._get_constant_force)
	case "_set_constant_torque":
		return reflect.ValueOf(self._set_constant_torque)
	case "_get_constant_torque":
		return reflect.ValueOf(self._get_constant_torque)
	case "_set_sleep_state":
		return reflect.ValueOf(self._set_sleep_state)
	case "_is_sleeping":
		return reflect.ValueOf(self._is_sleeping)
	case "_get_contact_count":
		return reflect.ValueOf(self._get_contact_count)
	case "_get_contact_local_position":
		return reflect.ValueOf(self._get_contact_local_position)
	case "_get_contact_local_normal":
		return reflect.ValueOf(self._get_contact_local_normal)
	case "_get_contact_local_shape":
		return reflect.ValueOf(self._get_contact_local_shape)
	case "_get_contact_local_velocity_at_position":
		return reflect.ValueOf(self._get_contact_local_velocity_at_position)
	case "_get_contact_collider":
		return reflect.ValueOf(self._get_contact_collider)
	case "_get_contact_collider_position":
		return reflect.ValueOf(self._get_contact_collider_position)
	case "_get_contact_collider_id":
		return reflect.ValueOf(self._get_contact_collider_id)
	case "_get_contact_collider_object":
		return reflect.ValueOf(self._get_contact_collider_object)
	case "_get_contact_collider_shape":
		return reflect.ValueOf(self._get_contact_collider_shape)
	case "_get_contact_collider_velocity_at_position":
		return reflect.ValueOf(self._get_contact_collider_velocity_at_position)
	case "_get_contact_impulse":
		return reflect.ValueOf(self._get_contact_impulse)
	case "_get_step":
		return reflect.ValueOf(self._get_step)
	case "_integrate_forces":
		return reflect.ValueOf(self._integrate_forces)
	case "_get_space_state":
		return reflect.ValueOf(self._get_space_state)
	default:
		return gd.VirtualByName(PhysicsDirectBodyState2D.Instance(self.AsPhysicsDirectBodyState2D()), name)
	}
}
func init() {
	gdclass.Register("PhysicsDirectBodyState2DExtension", func(ptr gd.Object) any { return Instance{pointers.AsA[gdclass.PhysicsDirectBodyState2DExtension](ptr)} })
}
