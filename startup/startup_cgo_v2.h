// Code generated by ./internal/cmd/generate; DO NOT EDIT.
#include <stdlib.h>
#include <stdbool.h>

GDExtensionBool cgo_extension_init(GDExtensionInterfaceGetProcAddress p_get_proc_address, GDExtensionClassLibraryPtr p_library, GDExtensionInitialization *r_initialization);
uintptr_t gd_builtin_name(uintptr_t, int64_t);
void gd_builtin_call(uintptr_t, int32_t, void*);
void gd_callable_create(uintptr_t, uint64_t, void*);
uintptr_t gd_callable_lookup(uint64_t, uint64_t);
void gd_classdb_FileAccess_write(uintptr_t, char*, int64_t);
int64_t gd_classdb_FileAccess_read(uintptr_t, char*, int64_t);
uintptr_t gd_classdb_Image_unsafe(uintptr_t);
uint8_t gd_classdb_Image_access(uintptr_t, int64_t);
uintptr_t gd_method_list_make(int64_t);
void gd_method_list_push(uintptr_t, uintptr_t, uintptr_t, uint32_t, bool, uintptr_t, uint32_t, uintptr_t, uint32_t, void*);
void gd_method_list_free(uintptr_t);
uintptr_t gd_property_list_make(int64_t);
void gd_property_list_push(uintptr_t, uint32_t, uintptr_t, uintptr_t, uint32_t, uintptr_t, uint32_t, uint32_t);
void gd_property_list_free(uintptr_t);
uint32_t gd_property_info_type(uintptr_t);
uintptr_t gd_property_info_name(uintptr_t);
uintptr_t gd_property_info_class_name(uintptr_t);
uint32_t gd_property_info_hint(uintptr_t);
uintptr_t gd_property_info_hint_string(uintptr_t);
uint32_t gd_property_info_usage(uintptr_t);
void gd_classdb_register(uintptr_t, uintptr_t, uintptr_t, bool, bool, bool, bool, uintptr_t);
void gd_classdb_register_methods(uintptr_t, uintptr_t);
void gd_classdb_register_constant(uintptr_t, uintptr_t, uintptr_t, int64_t, bool);
void gd_classdb_register_property(uintptr_t, uintptr_t, uintptr_t, uintptr_t);
void gd_classdb_register_property_indexed(uintptr_t, uintptr_t, uintptr_t, uintptr_t, int64_t);
void gd_classdb_register_property_group(uintptr_t, uintptr_t, uintptr_t);
void gd_classdb_register_property_sub_group(uintptr_t, uintptr_t, uintptr_t);
void gd_classdb_register_signal(uintptr_t, uintptr_t, uintptr_t);
void gd_classdb_register_removal(uintptr_t);
void gd_classdb_WorkerThreadPool_add_task(uintptr_t, uintptr_t, bool, uintptr_t);
void gd_classdb_WorkerThreadPool_add_group_task(uintptr_t, uintptr_t, int32_t, int32_t, bool, uintptr_t);
int64_t gd_classdb_XMLParser_load(uintptr_t, char*, int64_t);
void gd_packed_dictionary_access(uintptr_t, uint64_t, uint64_t, uint64_t, void*);
void gd_packed_dictionary_modify(uintptr_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
void gd_editor_add_documentation(const char*, int64_t);
void gd_editor_add_plugin(uintptr_t);
void gd_editor_end_plugin(uintptr_t);
bool gd_iterator_make(uint64_t, uint64_t, uint64_t, void*);
bool gd_iterator_next(uint64_t, uint64_t, uint64_t, void*, uint64_t, uint64_t, uint64_t);
bool gd_iterator_load(uint64_t, uint64_t, uint64_t, void*, uint64_t, uint64_t, uint64_t);
void gd_log_error(const char*, int64_t, const char*, int64_t, const char*, int64_t, const char*, int64_t, int32_t, bool);
void gd_log_warning(const char*, int64_t, const char*, int64_t, const char*, int64_t, const char*, int64_t, int32_t, bool);
uintptr_t gd_memory_malloc(int64_t);
int64_t gd_memory_sizeof(uintptr_t);
uintptr_t gd_memory_resize(uintptr_t, int64_t);
void gd_memory_free(uintptr_t);
void gd_memory_edit_byte(uintptr_t, uint8_t);
void gd_memory_edit_u16(uintptr_t, uint16_t);
void gd_memory_edit_u32(uintptr_t, uint32_t);
void gd_memory_edit_u64(uintptr_t, uint64_t);
void gd_memory_edit_256(uintptr_t, uint64_t, uint64_t, uint64_t, uint64_t);
void gd_memory_edit_512(uintptr_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
uint8_t gd_memory_load_byte(uintptr_t);
uint16_t gd_memory_load_u16(uintptr_t);
uint32_t gd_memory_load_u32(uintptr_t);
uint64_t gd_memory_load_u64(uintptr_t);
uintptr_t gd_object_make(uintptr_t);
void gd_object_call(uintptr_t, uintptr_t, int64_t, void*);
uintptr_t gd_object_name(uintptr_t);
uintptr_t gd_object_type(uintptr_t);
uintptr_t gd_object_cast(uintptr_t, uintptr_t);
uintptr_t gd_object_lookup(uint64_t);
uintptr_t gd_object_global(uintptr_t);
void gd_object_extension_setup(uintptr_t, uintptr_t, uintptr_t);
uintptr_t gd_object_extension_fetch(uintptr_t);
void gd_object_extension_close(uintptr_t);
uint64_t gd_object_id(uintptr_t);
uint64_t gd_object_id_inside_variant(uint64_t, uint64_t, uint64_t);
uintptr_t gd_object_method_lookup(uintptr_t, uintptr_t, int64_t);
uintptr_t gd_object_script_make(uintptr_t);
void gd_object_script_call(uintptr_t, uintptr_t, int64_t, void*);
void gd_object_script_setup(uintptr_t, uintptr_t);
uintptr_t gd_object_script_fetch(uintptr_t, uintptr_t);
bool gd_object_script_defines_method(uintptr_t, uintptr_t);
void gd_object_script_property_state_add(uintptr_t, uintptr_t, uintptr_t, uint64_t, uint64_t, uint64_t);
uintptr_t gd_object_script_placeholder_create(uintptr_t, uintptr_t, uintptr_t);
void gd_object_script_placeholder_update(uintptr_t, uintptr_t, uintptr_t);
void gd_object_unsafe_call(uintptr_t, uintptr_t, void*);
void gd_object_unsafe_free(uintptr_t);
uintptr_t gd_packed_byte_array_unsafe(uintptr_t, uintptr_t);
uint8_t gd_packed_byte_array_access(uintptr_t, uintptr_t, int64_t);
uintptr_t gd_packed_color_array_unsafe(uintptr_t, uintptr_t);
void gd_packed_color_array_access(uintptr_t, uintptr_t, int64_t, void*);
uintptr_t gd_packed_float32_array_unsafe(uintptr_t, uintptr_t);
float gd_packed_float32_array_access(uintptr_t, uintptr_t, int64_t);
uintptr_t gd_packed_float64_array_unsafe(uintptr_t, uintptr_t);
double gd_packed_float64_array_access(uintptr_t, uintptr_t, int64_t);
uintptr_t gd_packed_int32_array_unsafe(uintptr_t, uintptr_t);
int32_t gd_packed_int32_array_access(uintptr_t, uintptr_t, int64_t);
uintptr_t gd_packed_int64_array_unsafe(uintptr_t, uintptr_t);
int64_t gd_packed_int64_array_access(uintptr_t, uintptr_t, int64_t);
uintptr_t gd_packed_string_array_unsafe(uintptr_t, uintptr_t);
uintptr_t gd_packed_string_array_access(uintptr_t, uintptr_t, int64_t);
uintptr_t gd_packed_variant_array_unsafe(uintptr_t, uintptr_t);
void gd_packed_variant_array_access(uintptr_t, uintptr_t, int64_t, void*);
uintptr_t gd_packed_vector2_array_unsafe(uintptr_t, uintptr_t);
void gd_packed_vector2_array_access(uintptr_t, uintptr_t, int64_t, void*);
uintptr_t gd_packed_vector3_array_unsafe(uintptr_t, uintptr_t);
void gd_packed_vector3_array_access(uintptr_t, uintptr_t, int64_t, void*);
uintptr_t gd_packed_vector4_array_unsafe(uintptr_t, uintptr_t);
void gd_packed_vector4_array_access(uintptr_t, uintptr_t, int64_t, void*);
uintptr_t gd_ref_get_object(uintptr_t);
void gd_ref_set_object(uintptr_t, uintptr_t);
int32_t gd_string_access(uintptr_t, int64_t);
uintptr_t gd_string_resize(uintptr_t, int64_t);
uintptr_t gd_string_unsafe(uintptr_t);
uintptr_t gd_string_append(uintptr_t, uintptr_t);
uintptr_t gd_string_append_rune(uintptr_t, int32_t);
uintptr_t gd_string_decode_latin1(const char*, int64_t);
uintptr_t gd_string_decode_utf8(const char*, int64_t);
uintptr_t gd_string_decode_utf16(const char*, int64_t, bool);
uintptr_t gd_string_decode_utf32(const char*, int64_t);
uintptr_t gd_string_decode_wide(const char*, int64_t);
int64_t gd_string_encode_latin1(uintptr_t, char*, int64_t);
int64_t gd_string_encode_utf8(uintptr_t, char*, int64_t);
int64_t gd_string_encode_utf16(uintptr_t, char*, int64_t);
int64_t gd_string_encode_utf32(uintptr_t, char*, int64_t);
int64_t gd_string_encode_wide(uintptr_t, char*, int64_t);
uintptr_t gd_string_intern_latin1(const char*, int64_t);
uintptr_t gd_string_intern_utf8(const char*, int64_t);
uintptr_t gd_variant_type_name(uint32_t);
void gd_variant_type_make(uint32_t, int64_t, void*);
void gd_variant_type_call(uint32_t, uintptr_t, int64_t, void*);
bool gd_variant_type_convertable(uint32_t, uint32_t, bool);
void gd_variant_type_setup_array(uintptr_t, uint32_t, uintptr_t, uint64_t, uint64_t, uint64_t);
void gd_variant_type_setup_dictionary(uintptr_t, uint32_t, uintptr_t, uint64_t, uint64_t, uint64_t, uint32_t, uintptr_t, uint64_t, uint64_t, uint64_t);
void gd_variant_type_fetch_constant(uint32_t, uintptr_t, void*);
uintptr_t gd_variant_type_builtin_method(uint32_t, uintptr_t, int64_t);
uintptr_t gd_variant_type_unsafe_constructor(uint32_t, int64_t);
uintptr_t gd_variant_type_evaluator(uint32_t, uint32_t, uint32_t);
uintptr_t gd_variant_type_setter(uint32_t, uintptr_t);
uintptr_t gd_variant_type_getter(uint32_t, uintptr_t);
bool gd_variant_type_has_property(uint32_t, uintptr_t);
void gd_variant_type_unsafe_call(uintptr_t, int64_t, void*);
void gd_variant_type_unsafe_make(uintptr_t, void*);
void gd_variant_type_unsafe_free(uint32_t, void*);
void gd_variant_zero(void*);
void gd_variant_copy(uint64_t, uint64_t, uint64_t, void*);
void gd_variant_call(uint64_t, uint64_t, uint64_t, uintptr_t, int64_t, void*);
bool gd_variant_eval(uint32_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void*);
int64_t gd_variant_hash(uint64_t, uint64_t, uint64_t);
bool gd_variant_bool(uint64_t, uint64_t, uint64_t);
uintptr_t gd_variant_text(uint64_t, uint64_t, uint64_t);
uint32_t gd_variant_type(uint64_t, uint64_t, uint64_t);
void gd_variant_deep_copy(uint64_t, uint64_t, uint64_t, void*);
int64_t gd_variant_deep_hash(uint64_t, uint64_t, uint64_t, int64_t);
bool gd_variant_get_index(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void*);
bool gd_variant_get_array(uint64_t, uint64_t, uint64_t, int64_t, void*);
bool gd_variant_get_field(uint64_t, uint64_t, uint64_t, uintptr_t, void*);
bool gd_variant_has_index(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
bool gd_variant_has_method(uint64_t, uint64_t, uint64_t, uintptr_t);
bool gd_variant_set_index(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
bool gd_variant_set_array(uint64_t, uint64_t, uint64_t, int64_t, uint64_t, uint64_t, uint64_t, void*);
bool gd_variant_set_field(uint64_t, uint64_t, uint64_t, uintptr_t, uint64_t, uint64_t, uint64_t);
void gd_variant_unsafe_call(uintptr_t, int64_t, void*);
void gd_variant_unsafe_eval(uintptr_t, void*);
void gd_variant_unsafe_free(uint64_t, uint64_t, uint64_t);
void gd_variant_unsafe_make_native(uint32_t, uint64_t, uint64_t, uint64_t, void*);
void gd_variant_unsafe_from_native(uint32_t, void*);
uintptr_t gd_variant_unsafe_internal_pointer(uint32_t, uint64_t, uint64_t, uint64_t);
void gd_variant_unsafe_get_field(uintptr_t, void*);
void gd_variant_unsafe_get_array(uint32_t, int64_t, void*);
void gd_variant_unsafe_get_index(uint32_t, void*);
void gd_variant_unsafe_set_field(uintptr_t, void*);
void gd_variant_unsafe_set_array(uint32_t, int64_t, void*);
void gd_variant_unsafe_set_index(uint32_t, void*);
uint32_t gd_version_major();
uint32_t gd_version_minor();
uint32_t gd_version_patch();
uint32_t gd_version_hex();
uintptr_t gd_version_status();
uintptr_t gd_version_build();
uintptr_t gd_version_hash();
uint64_t gd_version_timestamp();
uintptr_t gd_version_string();
